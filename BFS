# include<iostream>
# include<queue>
using namespace std;

void printBFS( int **edges,int n, int sv, int* visited){
    queue<int> pending;
    pending.push(sv);
    visited[sv] = true;
    
    while(!pending.empty()){
       int currentvertex = pending.front();
       cout<<currentvertex<<" ";
       pending.pop();
       
       for( int i =0;i<n;i++){
            if(edges[currentvertex][i] ==1 && !visited[i]){
                   pending.push(i);
                   visited[i] = true;
            } 
       }
    }

}
void printBFS(int** edges, int n){
     bool* visited = new bool[n];
     for( int i =0;i<n;i++){
          visited[i] = false;
     }
     
     for( int i =0;i<n;i++){
         if(!visited[i]){
             printBFS(edges,n,i,visited);
         }
      }
  }
  
int main(){
    int n, e;
    cin>>n>>e;
    int** edges = new int*[n];
    for( int i =0;i<n;i++){
        edges[i] = new int[n];
        for(int j =0;j<n;j++){
            edges[i][j] = 0;
         }
    }
    
   printBFS(edges,n);
 }
